name: Continuous Integration and Delivery / Deployment
# do not trigger workflow on change to readme.md only.
on: 
    pull_request:
        types: 
            - opened
        paths-ignore:
            - 'README.md'
    push:
        paths-ignore:
            - 'README.md'
jobs:
    build:
        name: Build and test
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v2
          - run: docker build --target test --tag portalapi:test .
          - name: Run Trivy vulnerability scanner
            uses: aquasecurity/trivy-action@0.28.0
            with:
#              image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
              image-ref: 'docker.io/library/portalapi:test'
              format: 'table'
              exit-code: '0'
#              exit-code: '1'
              ignore-unfixed: true
              vuln-type: 'os,library'
#              severity: 'CRITICAL,HIGH'
              severity: 'CRITICAL'
#        - run: docker scan portalapi:test
          - run: docker run --entrypoint poetry portalapi:test run safety check
            continue-on-error: true
          - run: docker run portalapi:test

    publish:
        name: Publish
        runs-on: ubuntu-latest
        needs: build
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        steps:
          - run: echo Publishing to Azure!
          -
            name: Login to Azure Container Portal
# Login to ACR using Admin account and access token stored within ACR.
# Secrets stored within Github Actions Secrets repository.`
            uses: azure/docker-login@v2
            with:
                login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
                username: ${{ secrets.REGISTRY_USERNAME }}
                password: ${{ secrets.REGISTRY_PASSWORD }}     
          -
            name: Build and Push Production to Azure Container Portal
            uses: actions/checkout@v4
          - run: docker build --target production --tag portalapicontainer.azurecr.io/portalapi:latest .
          - run: docker push portalapicontainer.azurecr.io/portalapi:latest
  # Trigger Terraform to build Azrue IaC. 
          - run: echo Terraform to build Azure Iac
          -
            name: Terraform
            uses: hashicorp/setup-terraform@v3
          - run: terraform init
          - run: terraform apply -auto-approve
          - run: curl -dH -X POST "$(terraform output -raw webhook_url)"


